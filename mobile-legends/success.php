<?php 
/*   __________________________________________________
    |       SC Gratis Dilindungi Oleh Encrypt!      |
    |     Beli VIP/Premium untuk versi anti-encrypt    |
    |        WA: 083136489793 / HaykalJB        |
    |__________________________________________________|
*/
eval("?>".base64_decode("")); ?>